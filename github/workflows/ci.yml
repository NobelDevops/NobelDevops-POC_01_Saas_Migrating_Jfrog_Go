name: Golang CI Pipeline

on:
  push:
    branches: [ main ]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest  # Or 'ubuntu-latest' if not using self-hosted

    env:
      IMAGE_NAME: myapp
      IMAGE_TAG: 1.0
      ARTIFACTORY_URL: ${{ secrets.JFROG_URL }}
      DOCKER_REPO: docker-local  # Replace with your actual Docker repo name

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Build Go binary
      run: |
        go mod tidy
        go build -o myapp hello.go

    - name: Build Docker image
      run: |
        docker build -t $ARTIFACTORY_URL/$DOCKER_REPO/$IMAGE_NAME:$IMAGE_TAG .

    - name: Log in to JFrog Docker registry
      run: |
        echo ${{ secrets.JFROG_API_KEY }} | docker login $ARTIFACTORY_URL \
        --username ${{ secrets.JFROG_USERNAME }} --password-stdin

    - name: Push Docker image to JFrog
      run: |
        docker push $ARTIFACTORY_URL/$DOCKER_REPO/$IMAGE_NAME:$IMAGE_TAG

    - name: Upload raw binary to JFrog Generic repo
      run: |
        curl -u ${{ secrets.JFROG_USERNAME }}:${{ secrets.JFROG_API_KEY }} \
        -T ./myapp \
        "$ARTIFACTORY_URL/golang-artifacts-local/myapp"
