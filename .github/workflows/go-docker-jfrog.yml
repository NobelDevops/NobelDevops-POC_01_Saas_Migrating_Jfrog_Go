name: Golang CI Pipeline

on:
  push:
    branches: [ main ]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Build Go binary
      run: |
        go mod tidy
        go build -o myapp hello.go

    - name: Build Docker image
      run: |
        JFROG_REGISTRY="${{ secrets.JFROG_REGISTRY }}"
        IMAGE_NAME="myapp"
        IMAGE_TAG="1.0"
        DOCKER_REPO="docker-local"
        docker build -t $JFROG_REGISTRY/$DOCKER_REPO/$IMAGE_NAME:$IMAGE_TAG .

    - name: Log in to JFrog Docker registry
      run: |
        JFROG_REGISTRY="${{ secrets.JFROG_REGISTRY }}"
        echo "${{ secrets.JFROG_API_KEY }}" | docker login $JFROG_REGISTRY \
        --username "${{ secrets.JFROG_USERNAME }}" --password-stdin

    - name: Push Docker image to JFrog
      run: |
        JFROG_REGISTRY="${{ secrets.JFROG_REGISTRY }}"
        IMAGE_NAME="myapp"
        IMAGE_TAG="1.0"
        DOCKER_REPO="docker-local"
        docker push $JFROG_REGISTRY/$DOCKER_REPO/$IMAGE_NAME:$IMAGE_TAG

    - name: Upload raw binary to JFrog Generic repo
      run: |
        ARTIFACTORY_URL="${{ secrets.JFROG_URL }}"
        curl -u "${{ secrets.JFROG_USERNAME }}:${{ secrets.JFROG_API_KEY }}" \
        -T ./myapp \
        "$ARTIFACTORY_URL/golang-artifacts-local/myapp"
