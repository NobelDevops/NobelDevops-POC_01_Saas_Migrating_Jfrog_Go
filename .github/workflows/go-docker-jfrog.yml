name: Golang CI Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: myapp
      IMAGE_TAG: 1.0
      JFROG_URL: ${{ secrets.JFROG_URL }}
      JFROG_DOCKER_REPO: ${{ secrets.JFROG_DOCKER_REPO }}     # e.g. docker-local
      JFROG_GENERIC_REPO: ${{ secrets.JFROG_GENERIC_REPO }}   # e.g. golang-artifacts-local
      JFROG_USER: ${{ secrets.JFROG_USER }}
      JFROG_PASSWORD: ${{ secrets.JFROG_API_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Build Go binary
        run: |
          go mod tidy
          go build -o myapp hello.go

      - name: Build Docker image
        run: |
          docker build -t ${JFROG_URL}/${JFROG_DOCKER_REPO}/${IMAGE_NAME}:${IMAGE_TAG} .

      - name: Log in to JFrog Docker registry
        run: |
          echo "${JFROG_PASSWORD}" | docker login ${JFROG_URL} \
          --username "${JFROG_USER}" --password-stdin

      - name: Push Docker image to JFrog
        run: |
          docker push ${JFROG_URL}/${JFROG_DOCKER_REPO}/${IMAGE_NAME}:${IMAGE_TAG}

      - name: Upload raw binary to JFrog Generic repo
        run: |
          curl -u "${JFROG_USER}:${JFROG_PASSWORD}" \
          -T ./myapp \
          "${JFROG_URL}/artifactory/${JFROG_GENERIC_REPO}/myapp-${IMAGE_TAG}"
