name: Push to JFrog

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      # JFrog settings
      JFROG_HOST: ${{ secrets.JFROG_HOST }}           # e.g. trial4j0m55.jfrog.io
      JFROG_URL: ${{ secrets.JFROG_URL }}             # e.g. https://trial4j0m55.jfrog.io/artifactory
      JFROG_DOCKER_REPO: ${{ secrets.JFROG_DOCKER_REPO }}   # e.g. docker-local
      JFROG_GENERIC_REPO: ${{ secrets.JFROG_GENERIC_REPO }} # e.g. golang-artifacts-local
      JFROG_USER: ${{ secrets.JFROG_USER }}
      JFROG_PASSWORD: ${{ secrets.JFROG_API_KEY }}

      # Image info
      IMAGE_NAME: myapp
      IMAGE_TAG: 1.0

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to JFrog Docker
        run: |
          echo "${JFROG_PASSWORD}" | docker login ${JFROG_HOST} \
            --username "${JFROG_USER}" --password-stdin

      - name: Build & Push Docker Image
        run: |
          echo "ðŸ‘‰ Building Docker image: ${JFROG_HOST}/${JFROG_DOCKER_REPO}/${IMAGE_NAME}:${IMAGE_TAG}"
          docker build -t ${JFROG_HOST}/${JFROG_DOCKER_REPO}/${IMAGE_NAME}:${IMAGE_TAG} .
          docker push ${JFROG_HOST}/${JFROG_DOCKER_REPO}/${IMAGE_NAME}:${IMAGE_TAG}

      - name: Upload Generic Artifact
        run: |
          echo "ðŸ‘‰ Uploading artifact to ${JFROG_URL}/${JFROG_GENERIC_REPO}/${IMAGE_NAME}-${IMAGE_TAG}.tar.gz"
          curl -u "${JFROG_USER}:${JFROG_PASSWORD}" \
            -T target/${IMAGE_NAME}-${IMAGE_TAG}.tar.gz \
            "${JFROG_URL}/${JFROG_GENERIC_REPO}/${IMAGE_NAME}-${IMAGE_TAG}.tar.gz"
